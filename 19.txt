高级话题

函数设计理念
耦合性：对于输入使用参数，对于输出使用return
耦合性：只有真正必要的情况下使用全局变量
耦合性：不要改变可变类型的参数，除非调用者希望这样做
聚合性：每个函数都应有单一的统一的目标
大小：每个函数都应相对较小
耦合：避免直接改变另一个模块中的变量

递归函数

直接或者间接地调用自身进行循环的函数。可以处理任意形状的结构

函数对象

记住函数也是对象，可以做和其他对象一样的操作，赋值给变量，传递给其他函数，嵌入到数据结构，从一个函数返回给另一个函数
函数对象赋值给变量名，变量名是对函数对象的引用，通过给变量名后加（）来引用函数。
def func():
	pass
func.count=0
func.count+=1
这样的属性可以用来直接把状态信息附加到函数对象，这样的属性可以在函数自身的任何地方访问。

匿名函数lambda
lambda表达式创建了一个之后能够调用的函数，单数它返回的是一个函数而不是将这个函数复制给一个变量名。
lambda arg1，arg2：expression using args
lambda是一个表达式而不是语句。其返回一个函数，可以赋值给一个变量
lambda主体是一个表达式而不是一个代码块

map filter reduce 返回的都是可迭代对象（单次）