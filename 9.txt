元组、文件和其他
常见的元组常量和运算
()
t=(0,)
t=1,2,3,4
t=('a','b',('a','b'))
t=tuple('abcd')
t[i]
t[i:j]
t[i][j]
len(t)
t1+t2
t1*3
'' in t
t.index()
t.count()

常见的文件运算
output=open(r'C:\spam','w')
input=open('data','r')
astring=input.read()
astring=input.read(n)
astring=input.readline()  读取下一行到一个字符串
astring=input.readlines() 读取整个文件到字符串列表
output.write(astring)     写入字符串到文件
output.writelines(alist)  把列表内所有字符串写入文件
output.close()
output.flush()
anyfile.seek(n)           修改文件位置到偏移量n处
for line in open('data') : use line
open('f.txt',encoding='latin-1')
open('f.bin','rb')

使用文件
文件迭代器是最好的读取行工具
内容是字符串，不是对象。
从文件中读取的数据都是字符串，需要将其转化称其他的python对象，把数据写入文件时，python不会自动把对象转化成字符串，必须传递一个已经格式化好的字符串。
str(),eval()

用pickle存储python的原生对象
d={1:2,3:4}
f=open('abc.pkl','wb')
import pickle
pickle.dump(d,f)
f.close()

f=open('abc.pkl','rb')
e=pickle.load(f)

文件中打包二进制数据的存储与解析
struct模块能够构造并打包二进制数据。他能够把文件中的字符串解读为二进制数据。
f=open('data.bin','wb')
import struct
data=struct.pack()
f.write(data)

f=open('data.bin','rb')
data=f.read()
values=struct.unpack()

类型分类
对象根据分类来共享操作，如字符串，元组和列表都能合并，长度和索引
只有可变对象能够原处修改
集合类似于一个无值的字典的键，但是他们不能映射为值，并且没有顺序，因此他不是映射性也不是序列类型，frozenset是集合的不可变版本

对象类型	分类	是否可变
数字		数值	否
字符串		序列	否
列表		序列	是
字典		映射	是
元组		序列	否
文件		扩展
sets		集合 	是
frozenset	集合	否
bytearray	序列	是

引用和拷贝
赋值操作总是储存对象的引用，而不是对象的拷贝。因为赋值操作会禅城相同对象的多个引用，在原处修改可变对象时可能会影响程序中其他地方对相同对象的引用。
copy
分片表达式l[:]
字典的copy方法(d.copy())能复制字典
内置函数能生成拷贝(list(l))
copy标准库模块能够生成完整的拷贝

[:]和d.copy()仅仅是对顶层的复制。
import copy
copy.deepcopy()

比较、相等性
'=='操作符测试值的相等性
'is'表达式测试对象的一致性（*****）

python的类型层次
每个核心类型都有个新的内置名来支持面向对象子类的类型定制：dict,list,str,tuple,int,float,complex,byte,type,set,file
type()==type()
isinstance()
